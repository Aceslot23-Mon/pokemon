{"version":3,"sources":["stile/selezione.module.css","stile/App.module.css","immagini/pngegg.png","immagini/Poke_Ball.webp","richieste/TutteLeListe.tsx","component/Aggiungi.tsx","richieste/Pokemon.tsx","component/Selezione.tsx","component/NuovoPokemon.tsx","App.tsx","serviceWorker.ts","index.tsx","stile/nuovopokemon.module.css"],"names":["module","exports","trasformaBene","oggetto","nome","map","item","index","paroleMultiple","name","split","parola","charAt","toUpperCase","substr","length","join","url","AllPokemonName","a","axios","method","then","responde","data","results","listaNomi","AllNature","response","listaNature","allItems","itemGiusti","items","unshift","Aggiungi","props","nomi","aggiungi","useState","pokemonSelezionato","setPokemon","value","onChange","e","target","onKeyDown","keyCode","pokemon","indx","key","style","marginLeft","onClick","setAbilita","setListaAbilita","setListaMosse","setSprite","setMinimo","setLivello","rimuovi","indice","timeout","nomePokemon","mosseBelle","moves","mossa","move","push","abilitaBelle","abilities","abilita","ability","sprites","other","front_default","species","evolution_chain","get","nomeSpecie","chain","minimo","primaEvoluzione","evolves_to","evolution_details","min_level","secondaEvoluzione","catch","error","console","log","Selezione","lista","setValue","display","className","Stile","select","elemento","SelezionaMossa","selectMossa","stato","copia","idx","NuovoPokemon","listNature","naturaList","listaAbilita","mosseLista","sprite","strumento","setStrumento","mosse","setMosse","natura","setNatura","livello","livelloMinimo","useEffect","RicercaPokemon","placeItems","styles","loading","height","src","require","visualizzaMosse","i","container","pokemonContainer","img","inserimentoDati","quattroItem","width","textAlign","fontSize","type","min","max","parseInt","id","buttonRimuovi","App","nomiPok","setNomi","naturePok","setNature","setItems","squadraPokemon","setSquadra","listaStrumenti","prendiNomi","rimuoviPokemon","state","copy","slice","header","color","boxPokemon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,OAAS,0BAA0B,YAAc,iC,mBCAnED,EAAOC,QAAU,CAAC,WAAa,wBAAwB,OAAS,sB,4ECDhED,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,yICIpC,SAASC,EAAcC,EAA0BC,GASpD,OARAD,EAAUA,EAAQE,KAAI,SAACC,EAAgBC,GAAmB,IAElDC,EADaF,EAATG,KACkBC,MAAM,KAIhC,MAAO,CAAED,MAHTD,EAAiBA,EAAeH,KAAI,SAAAM,GAAM,OAAIA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,OAAO,EAAGH,EAAOI,YACnEC,KAAK,KAEZC,IADpB,oCAAgCb,EAAhC,YAAwCG,EAAQ,EAAhD,SAMV,IAAMW,EAAc,uCAAG,4BAAAC,EAAA,sEACFC,IAAM,CAC1BC,OAAQ,MACRJ,IAAK,gDAGPK,MAAK,SAACC,GAAD,OAAkCA,EAASC,QAC7CF,MAAK,SAAAE,GAGF,OADmBtB,EADCsB,EAAZC,QACkC,cATxB,cACpBC,EADoB,yBAanBA,GAbmB,2CAAH,qDAgBdC,EAAS,uCAAG,4BAAAR,EAAA,sEAEjBC,IAAM,CACFC,OAAQ,MACRJ,IAAK,8CACNK,MAAK,SAACM,GAAD,OAAkCA,EAASJ,QAC9CF,MAAK,SAAAE,GAGF,OADsBtB,EADFsB,EAAZC,QACqC,aARpC,cACfI,EADe,yBAYdA,GAZc,2CAAH,qDAeTC,EAAQ,uCAAG,4BAAAX,EAAA,sEAEhBC,IAAM,CACFH,IAAK,8CACLI,OAAQ,QACTC,MAAK,SAACM,GAAD,OAAkCA,EAASJ,QAC9CF,MAAK,SAAAE,GAAS,IAEPO,EAAa7B,EADCsB,EAAVQ,MAC8B,SAEtC,OADAD,EAAWE,QAAQ,CAACxB,KAAM,YAAaQ,IAAK,KACrCc,KAVC,cACdC,EADc,yBAabA,GAba,2CAAH,qDCzCRE,EAA4B,SAACC,GAAW,IACzCC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SADkC,EAEPC,mBAASF,EAAK,GAAGnB,KAFV,mBAEzCsB,EAFyC,KAErBC,EAFqB,KAIhD,OACI,6BACI,4BAAQC,MAAOF,EAAoBG,SAAU,SAAAC,GAAC,OAAIH,EAAWG,EAAEC,OAAOH,QAAQI,UAAW,SAAAF,GACnE,KAAdA,EAAEG,SACFT,EAASE,KAITH,EAAK/B,KAAI,SAAC0C,EAASC,GAAV,OACL,4BAAQC,IAAKD,EAAMP,MAAOM,EAAQ9B,KAC7B8B,EAAQtC,UAIzB,4BAAQyC,MAAO,CAACC,WAAY,QAASC,QAAS,kBAAMf,EAASE,KAA7D,c,oECbL,WAA8BtB,EAAaoC,EAAuBC,EACrEC,EAAyBC,EACzBC,EAAsBC,EAAuBC,EAAkCC,GAF5E,eAAAzC,EAAA,sEAKGC,IAAM,CAAEC,OAAQ,MAAOJ,IAAKA,EAAK4C,QAAS,MAC3CvC,MAAK,SAAAM,GAAQ,OAAIA,EAASJ,QAC1BF,MAAK,SAACE,GACHsC,EAActC,EAAKf,KAEnB,IAAIsD,EAAavC,EAAKwC,MAAM3D,KAAI,SAAA4D,GAC5B,OAAO,eAAKA,EAAMC,SAGtBH,EAAW9B,QAAQ,CAAExB,KAAM,QAASQ,IAAK,KACzC8C,EAAWI,KAAK,CAAE1D,KAAM,IAAKQ,IAAK,KAElC8C,EAAa7D,EAAc6D,EAAY,QAEvC,IAAIK,EAAe5C,EAAK6C,UAAUhE,KAAI,SAAAiE,GAClC,OAAO,eAAKA,EAAQC,YAYxB,OATAH,EAAelE,EAAckE,EAAc,WAE3Cf,EAAWe,EAAa,GAAG3D,MAE3B6C,GAAgB,kBAAMc,KACtBb,GAAc,kBAAMQ,KAEpBP,GAAU,kBAAMhC,EAAKgD,QAAQC,MAAM,oBAAoBC,iBAEhDlD,KAEVF,MAAK,YAAkB,IAAfqD,EAAc,EAAdA,QACLvD,IAAM,CAAEH,IAAK0D,EAAQ1D,IAAKI,OAAQ,QAC7BC,MAAK,SAAAM,GAAQ,OAAIA,EAASJ,QAC1BF,MAAK,SAACE,GAAkB,IACboD,EAAoBpD,EAApBoD,gBACRxD,IAAMyD,IAAID,EAAgB3D,KAAKK,MAAK,SAAAM,GAAQ,OAAIA,EAASJ,QACpDF,MAAK,SAACE,GACH,IAAMsD,EAAatD,EAAKuD,MAAMJ,QAAQlE,KAClCuE,EAAS,EACb,GAAIlB,IAAgBgB,EAAY,CAC5B,IAAMG,EAAkBzD,EAAKuD,MAAMG,WAAW,GAE9C,GAAID,EAAgBN,QAAQlE,OAASqD,EACjCkB,EAASC,EAAgBE,kBAAkB,GAAGC,cAG7C,CACD,IAAMC,EAAoBJ,EAAgBC,WAAW,GACrDF,EAASK,EAAkBF,kBAAkB,GAAGC,WAIxD3B,GAAU,WACN,OAAOuB,KAEXtB,GAAW,WACP,OAAOsB,cAK9BM,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAAM9E,MAClBkD,EAAQC,MAnEb,4C,2CCJM8B,EAA6B,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOlD,EAA4B,EAA5BA,MAAOmD,EAAqB,EAArBA,SAAUxF,EAAW,EAAXA,KACjE,OACI,yBAAK8C,MAAO,CAAE2C,QAAS,WACnB,+BAAQzF,GACR,4BAAQ0F,UAAWC,IAAMC,OAAQvD,MAAOA,EAAOC,SAAU,SAACC,GAAD,OAAOiD,EAASjD,EAAEC,OAAOH,SAE1EkD,EAAMtF,KAAI,SAAC4F,EAAoB1F,GAArB,OACN,4BAAQ0C,IAAG,mBAAc7C,EAAd,YAAsBG,IAAU0F,EAASxF,YAS/DyF,EAAuC,SAAC,GAAuC,IAArCP,EAAoC,EAApCA,MAAOlD,EAA6B,EAA7BA,MAAOlC,EAAsB,EAAtBA,MAAOqF,EAAe,EAAfA,SACxE,OACI,4BAAQE,UAAWC,IAAMI,YAAa1D,MAAOA,EAAOC,SAAU,SAACC,GAAO,IAClDF,EAAYE,EAAtBC,OAAUH,MAChBmD,GAAS,SAACQ,GACN,IAAIC,EAAK,YAAOD,GAEhB,OADAC,EAAM9F,GAASkC,EACR4D,OAIPV,EAAMtF,KAAI,SAAC4F,EAAoBK,GAArB,OACN,4BAAQrD,IAAG,wBAAmB1C,EAAnB,YAA4B+F,IAAQL,EAASxF,WCxB/D8F,EAAgC,SAAC,GAA6D,IAA3D3C,EAA0D,EAA1DA,OAAQ3C,EAAkD,EAAlDA,IAAKe,EAA6C,EAA7CA,MAAmBwE,EAA0B,EAAtCC,WAAwB9C,EAAc,EAAdA,QAAc,EAC9DrB,mBAA0B,IADoC,mBAC/FoE,EAD+F,KACjFpD,EADiF,OAElEhB,mBAA0B,IAFwC,mBAE/FqE,EAF+F,KAEnFpD,EAFmF,OAI1EjB,mBAAiB,IAJyD,mBAI/FsE,EAJ+F,KAIvFpD,EAJuF,OAKpElB,mBAAS,aAL2D,mBAK/FuE,EAL+F,KAKpFC,EALoF,OAMxExE,mBAAiB,IANuD,mBAM/FgC,EAN+F,KAMtFjB,EANsF,OAO5Ef,mBAAmB,IAPyD,mBAO/FyE,EAP+F,KAOxFC,EAPwF,OAQ1E1E,mBAASkE,EAAW,GAAG/F,MARmD,mBAQ/FwG,EAR+F,KAQvFC,EARuF,OASxE5E,mBAAiB,GATuD,mBAS/F6E,EAT+F,KAStFzD,EATsF,OAWnEpB,qBAXmE,mBAW/F8E,EAX+F,KAWhF3D,EAXgF,KAmBtG,GANA4D,qBAAU,WAAQrF,EAAMmC,KAAK,CAAE1D,KAAM,IAAKQ,IAAK,OAAS,CAACe,IAEzDqF,qBAAU,YFfP,SAAP,2CEgBQC,CAAerG,EAAKoC,EAAYC,EAAiBC,EAAeC,EAAWC,EAAWC,EAAYC,EAASC,KAC5G,CAAC3C,EAAK2C,EAAQD,IAEb+C,EAAa3F,OAAS,GAAK4F,EAAW5F,OAAS,IAAM6F,IAAWQ,EAChE,OACI,yBAAKlE,MAAO,CAAE2C,QAAS,OAAQ0B,WAAY,WACvC,yBAAKzB,UAAW0B,IAAOC,QAASvE,MAAO,CAAEwE,OAAQ,QAAUC,IAAKC,EAAQ,OAMpF,IADA,IAAIC,EAAsC,GACjCC,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAAgB1D,KACZ,kBAAC,EAAD,CAAgBlB,IAAG,yBAAoB6E,GAAKnC,MAAOgB,EAAYpG,MAAOuH,EAAGrF,MAAOsE,EAAMe,GAAIlC,SAAUoB,KAI5G,OACI,yBAAKlB,UAAW0B,IAAOO,WACnB,yBAAKjC,UAAW0B,IAAOQ,kBACnB,yBAAKlC,UAAW0B,IAAOS,IAAKN,IAAKf,KAGrC,yBAAKd,UAAW0B,IAAOU,iBACnB,yBAAKpC,UAAW0B,IAAOW,aACnB,kBAAC,EAAD,CAAWxC,MAAO3D,EAAOS,MAAOoE,EAAWjB,SAAUkB,EAAc1G,KAAM,cACzE,kBAAC,EAAD,CAAWuF,MAAOe,EAAcjE,MAAO6B,EAASsB,SAAUvC,EAAYjD,KAAM,YAC5E,kBAAC,EAAD,CAAWuF,MAAOa,EAAY/D,MAAOwE,EAAQrB,SAAUsB,EAAW9G,KAAM,WACxE,2BAAO8C,MAAO,CAAEkF,MAAO,MAAOC,UAAW,SAAUC,SAAU,QAAUC,KAAK,SAASC,IAAKpB,EAAeqB,IAAI,KAAKhG,MAAO0E,EAASzE,SAAU,SAACC,GAAD,OAAOe,EAAWgF,SAAS/F,EAAEC,OAAOH,YAEpL,6BACKoF,GAEL,4BAAQc,GAAInB,IAAOoB,cAAexF,QAAS,kBAAMO,EAAQC,KAAzD,c,iBCaDiF,MAhEf,WAAgB,IAAD,EACcvG,qBADd,mBACNwG,EADM,KACGC,EADH,OAEkBzG,qBAFlB,mBAEN0G,EAFM,KAEKC,EAFL,OAGa3G,mBAAmB,IAHhC,mBAGNN,EAHM,KAGCkH,EAHD,OAKwB5G,mBAAmB,CAAC,yCAL5C,mBAKN6G,EALM,KAKUC,EALV,KAOb/B,qBAAU,YACQ,uCAAG,gCAAAlG,EAAA,sEACOD,IADP,cACXQ,EADW,OAEjBqH,EAAQrH,GAFS,SAGSC,IAHT,cAGXE,EAHW,OAIjBoH,EAAUpH,GAJO,UAKYC,IALZ,QAKXuH,EALW,OAMjBH,EAASG,GANQ,4CAAH,qDAQhBC,KACC,IAEH,IAIMC,EAAiB,SAAChJ,GACtB6I,GAAW,SAAAI,GAET,IAAIC,EAAI,YAAOD,GAEf,OADAC,EAAI,sBAAOA,EAAKC,MAAM,EAAGnJ,IAArB,YAAgCkJ,EAAKC,MAAMnJ,EAAQ,EAAGkJ,EAAK1I,cAKnE,OACE,6BACE,yBAAK+E,UAAW5C,IAAMyG,QACpB,6BACE,yBAAKzG,MAAO,CAACkF,MAAO,OAAQV,OAAO,QAASvE,WAAY,QAASwE,IAAKC,EAAQ,OAGhF,6BACE,wBAAI1E,MAAO,CAAC0G,MAAO,UAAnB,yBAGF,yBAAK1G,MAAO,CAACmF,UAAW,WACrBS,GAAWE,GAAahH,EAAMjB,OAAS,GAAKoI,EAAepI,OAAS,EACnE,kBAAC,EAAD,CAAUqB,KAAM0G,EAASzG,SA1BX,SAACpB,GACvBmI,GAAW,SAAAI,GAAK,4BAAQA,GAAR,CAAevI,UA0BrBkI,EAAepI,OAAS,EAAI,wCAAqB,0DAKvD+H,GAAWE,GAAahH,EAAMjB,OAAS,EACrC,yBAAK+E,UAAW5C,IAAM2G,YAElBV,EAAe9I,KAAI,SAACY,EAAKV,GAAN,OACjB,kBAAC,EAAD,CAAc0C,IAAG,uBAAkB1C,GAASqD,OAAQrD,EAAOU,IAAKA,EAAKe,MAAOA,EAAOyE,WAAYuC,EAAWrF,QAAS4F,QAGhH,OCxDCO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpJ,MAAK,SAAAqJ,GACJA,EAAaC,gBAEdtF,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMsF,a,kBEhJ5B7K,EAAOC,QAAU,CAAC,UAAY,gCAAgC,iBAAmB,uCAAuC,IAAM,0BAA0B,cAAgB,oCAAoC,YAAc,kCAAkC,QAAU,8BAA8B,YAAc,qC","file":"static/js/main.584e801d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"selezione_select__lbDBI\",\"selectMossa\":\"selezione_selectMossa__3Xz5D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxPokemon\":\"App_boxPokemon__3zHZL\",\"header\":\"App_header__3gYlJ\"};","module.exports = __webpack_public_path__ + \"static/media/pngegg.edd72be4.png\";","module.exports = __webpack_public_path__ + \"static/media/Poke_Ball.ee784ca0.webp\";","import axios, { AxiosResponse } from \"axios\";\n\nexport type elemento = { name: string; url: string };\n\nexport function trasformaBene(oggetto: Array<elemento>, nome: string) {\n    oggetto = oggetto.map((item: elemento, index: number) => {\n        const { name } = item;\n        let paroleMultiple = name.split(\"-\");\n        paroleMultiple = paroleMultiple.map(parola => parola.charAt(0).toUpperCase() + parola.substr(1, parola.length));\n        const parolaFinita = paroleMultiple.join(' ');\n        const url = `https://pokeapi.co/api/v2/${nome}/${index + 1}/`;\n        return { name: parolaFinita, url: url };\n    })\n    return oggetto;\n}\n\nexport const AllPokemonName = async () => {\n    const listaNomi = await axios({\n        method: \"GET\",\n        url: \"https://pokeapi.co/api/v2/pokemon?limit=807\",\n\n    }\n    ).then((responde: AxiosResponse<any>) => responde.data)\n        .then(data => {\n            const { results } = data;\n            const nomiGiusto = trasformaBene(results, \"pokemon\");\n            return nomiGiusto;\n        });\n\n    return listaNomi;\n}\n\nexport const AllNature = async () => {\n    const listaNature = await\n        axios({\n            method: \"GET\",\n            url: \"https://pokeapi.co/api/v2/nature?limit=25\"\n        }).then((response: AxiosResponse<any>) => response.data)\n            .then(data => {\n                const { results } = data;\n                const abilitaGiuste = trasformaBene(results, \"nature\");\n                return abilitaGiuste;\n            });\n\n    return listaNature;\n}\n\nexport const allItems = async () => {\n    const items = await\n        axios({\n            url: \"https://pokeapi.co/api/v2/item-attribute/5/\",\n            method: \"GET\"\n        }).then((response: AxiosResponse<any>) => response.data)\n            .then(data => {\n                const { items } = data;\n                let itemGiusti = trasformaBene(items, \"items\");\n                itemGiusti.unshift({name: \"Strumenti\", url: \"\"});\n                return itemGiusti;\n            });\n\n    return items;\n}","import React, { useState } from \"react\";\n\nimport { Risposta } from \"../App\";\n\ntype Props = { nomi: Risposta; aggiungi: (url: string) => void };\n\nexport const Aggiungi: React.FC<Props> = (props) => {\n    const { nomi, aggiungi } = props;\n    const [pokemonSelezionato, setPokemon] = useState(nomi[0].url);\n\n    return (\n        <div>\n            <select value={pokemonSelezionato} onChange={e => setPokemon(e.target.value)} onKeyDown={e => {\n                if (e.keyCode === 13) {\n                    aggiungi(pokemonSelezionato);\n                }\n            }}>\n                {\n                    nomi.map((pokemon, indx) => (\n                        <option key={indx} value={pokemon.url}>\n                            {pokemon.name}\n                        </option>))\n                }\n            </select>\n            <button style={{marginLeft: \"15px\"}} onClick={() => aggiungi(pokemonSelezionato)}>Aggiungi</button>\n        </div>\n    )\n\n}","import axios from \"axios\";\nimport { Pokemon } from \"../interface/Pokemon2\";\nimport { trasformaBene, elemento } from \"./TutteLeListe\";\nimport { Specie } from \"../interface/Specie\";\nimport { Catena } from \"../interface/CatenaEvolutiva\";\n\ntype SetString = React.Dispatch<React.SetStateAction<string>>;\ntype SetNumber = React.Dispatch<React.SetStateAction<number>>;\ntype SetLista = React.Dispatch<React.SetStateAction<elemento[]>>;\ntype SetMinimo = React.Dispatch<React.SetStateAction<number | undefined>>;\n\nexport async function RicercaPokemon(url: string, setAbilita: SetString, setListaAbilita: SetLista,\n    setListaMosse: SetLista, setSprite: SetString,\n    setMinimo: SetMinimo, setLivello: SetNumber, rimuovi: (index: number) => void, indice: number) {\n    let nomePokemon: string;\n\n    await axios({ method: \"GET\", url: url, timeout: 2000 })\n        .then(response => response.data)\n        .then((data: Pokemon) => {\n            nomePokemon = data.name;\n\n            let mosseBelle = data.moves.map(mossa => {\n                return { ...mossa.move };\n            })\n\n            mosseBelle.unshift({ name: \"Mossa\", url: \"\" });\n            mosseBelle.push({ name: \" \", url: \"\" });\n\n            mosseBelle = trasformaBene(mosseBelle, \"move\");\n\n            let abilitaBelle = data.abilities.map(abilita => {\n                return { ...abilita.ability };\n            })\n\n            abilitaBelle = trasformaBene(abilitaBelle, \"ability\");\n\n            setAbilita(abilitaBelle[0].name);\n\n            setListaAbilita(() => abilitaBelle);\n            setListaMosse(() => mosseBelle);\n\n            setSprite(() => data.sprites.other[\"official-artwork\"].front_default);\n\n            return data;\n        })\n        .then(({ species }) => {\n            axios({ url: species.url, method: \"GET\" })\n                .then(response => response.data)\n                .then((data: Specie) => {\n                    const { evolution_chain } = data;\n                    axios.get(evolution_chain.url).then(response => response.data)\n                        .then((data: Catena) => {\n                            const nomeSpecie = data.chain.species.name;\n                            let minimo = 1;\n                            if (nomePokemon !== nomeSpecie) {\n                                const primaEvoluzione = data.chain.evolves_to[0];\n\n                                if (primaEvoluzione.species.name === nomePokemon) {\n                                    minimo = primaEvoluzione.evolution_details[0].min_level;\n                                }\n\n                                else {\n                                    const secondaEvoluzione = primaEvoluzione.evolves_to[0];\n                                    minimo = secondaEvoluzione.evolution_details[0].min_level;\n                                }\n                            }\n\n                            setMinimo(() => {\n                                return minimo;\n                            });\n                            setLivello(() => {\n                                return minimo;\n                            });\n                        })\n                })\n        })\n        .catch((error: Error) => {\n            console.log(error.name);\n            rimuovi(indice);\n        });\n}","import React, { Dispatch, SetStateAction } from \"react\";\n\nimport Stile from \"../stile/selezione.module.css\";\n\ntype Elemento = { name: string, url: string };\ntype Props = { lista: Array<Elemento>, value: string, setValue: Dispatch<SetStateAction<string>>, nome: string }\n\nexport const Selezione: React.FC<Props> = ({ lista, value, setValue, nome }) => {\n    return (\n        <div style={{ display: \"inline\" }}>\n            <label>{nome}</label>\n            <select className={Stile.select} value={value} onChange={(e) => setValue(e.target.value)}>\n                {\n                    lista.map((elemento: Elemento, index: number) => (\n                        <option key={`Seleziona${nome}:${index}`}>{elemento.name}</option>\n                    ))\n                }\n            </select>\n        </div>\n    )\n}\n\ntype PropsMossa = { lista: Array<Elemento>, value: string, index: number, setValue: Dispatch<SetStateAction<string[]>> }\nexport const SelezionaMossa: React.FC<PropsMossa> = ({ lista, value, index, setValue }) => {\n    return (\n        <select className={Stile.selectMossa} value={value} onChange={(e) => {\n            let { target: { value } } = e;\n            setValue((stato) => {\n                let copia = [...stato];\n                copia[index] = value;\n                return copia;\n            })\n        }}>\n            {\n                lista.map((elemento: Elemento, idx: number) => (\n                    <option key={`SelezionaMossa${index}:${idx}`}>{elemento.name}</option>\n                ))\n            }\n        </select>\n    )\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"../stile/nuovopokemon.module.css\";\n\nimport { RicercaPokemon } from \"../richieste/Pokemon\";\n\nimport { elemento } from \"../richieste/TutteLeListe\";\nimport { Risposta } from \"../App\";\nimport { Selezione, SelezionaMossa } from \"./Selezione\";\n\ntype Props = { indice: number, url: string; items: Risposta; naturaList: Risposta; rimuovi: (index: number) => void }\n\nexport const NuovoPokemon: React.FC<Props> = ({ indice, url, items, naturaList: listNature, rimuovi }) => {\n    const [listaAbilita, setListaAbilita] = useState<Array<elemento>>([]);\n    const [mosseLista, setListaMosse] = useState<Array<elemento>>([]);\n\n    const [sprite, setSprite] = useState<string>('');\n    const [strumento, setStrumento] = useState(\"strumenti\");\n    const [abilita, setAbilita] = useState<string>('');\n    const [mosse, setMosse] = useState<string[]>([]);\n    const [natura, setNatura] = useState(listNature[0].name);\n    const [livello, setLivello] = useState<number>(1);\n\n    const [livelloMinimo, setMinimo] = useState<number>();\n\n    useEffect(() => { items.push({ name: \" \", url: \"\" }) }, [items]);\n\n    useEffect(() => {\n        RicercaPokemon(url, setAbilita, setListaAbilita, setListaMosse, setSprite, setMinimo, setLivello, rimuovi, indice);\n    }, [url, indice, rimuovi]);\n\n    if (listaAbilita.length < 1 || mosseLista.length < 1 || !sprite || !livelloMinimo) {\n        return (\n            <div style={{ display: \"grid\", placeItems: \"center\" }}>\n                <img className={styles.loading} style={{ height: \"40vh\" }} src={require('../immagini/pngegg.png')} />\n            </div>\n        )\n    }\n\n    let visualizzaMosse: Array<JSX.Element> = [];\n    for (let i = 0; i < 4; i++) {\n        visualizzaMosse.push(\n            <SelezionaMossa key={`SelezionaMossa:${i}`} lista={mosseLista} index={i} value={mosse[i]} setValue={setMosse} />\n        )\n    }\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.pokemonContainer}>\n                <img className={styles.img} src={sprite}></img>\n            </div>\n\n            <div className={styles.inserimentoDati}>\n                <div className={styles.quattroItem}>\n                    <Selezione lista={items} value={strumento} setValue={setStrumento} nome={\"Strumento\"} />\n                    <Selezione lista={listaAbilita} value={abilita} setValue={setAbilita} nome={\"Abilita\"} />\n                    <Selezione lista={listNature} value={natura} setValue={setNatura} nome={\"Natura\"} />\n                    <input style={{ width: \"80%\", textAlign: \"center\", fontSize: \"18px\" }} type=\"number\" min={livelloMinimo} max=\"99\" value={livello} onChange={(e) => setLivello(parseInt(e.target.value))} />\n                </div>\n                <div>\n                    {visualizzaMosse}\n                </div>\n                <button id={styles.buttonRimuovi} onClick={() => rimuovi(indice)}>Rimuovi</button>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\n\nimport { AllPokemonName, AllNature, allItems } from \"./richieste/TutteLeListe\";\nimport { Aggiungi } from './component/Aggiungi';\nimport { NuovoPokemon } from './component/NuovoPokemon';\n\nimport style from \"./stile/App.module.css\";\n\nexport type Risposta = Array<{ name: string; url: string }>;\n\nfunction App() {\n  const [nomiPok, setNomi] = useState<Risposta>();\n  const [naturePok, setNature] = useState<Risposta>();\n  const [items, setItems] = useState<Risposta>([]);\n\n  const [squadraPokemon, setSquadra] = useState<string[]>(['https://pokeapi.co/api/v2/pokemon/3/']);\n\n  useEffect(() => {\n    const prendiNomi = async () => {\n      const listaNomi = await AllPokemonName();\n      setNomi(listaNomi);\n      const listaNature = await AllNature();\n      setNature(listaNature);\n      const listaStrumenti = await allItems();\n      setItems(listaStrumenti);\n    }\n    prendiNomi();\n  }, [])\n\n  const aggiungiPokemon = (url: string) => {\n    setSquadra(state => [...state, url]);\n  }\n\n  const rimuoviPokemon = (index: number) => {\n    setSquadra(state => {\n\n      let copy = [...state];\n      copy = [...copy.slice(0, index), ...copy.slice(index + 1, copy.length)];\n      return copy;\n    })\n  }\n\n  return (\n    <div>\n      <div className={style.header}>\n        <div>\n          <img style={{width: \"50px\", height:\" 50px\", marginLeft: \"20px\"}} src={require('./immagini/Poke_Ball.webp')} />\n        </div>\n\n        <div>\n          <h2 style={{color: \"white\"}}>Pokemon Team Builder</h2>\n        </div>\n\n        <div style={{textAlign: \"center\"}}>\n          {nomiPok && naturePok && items.length > 0 && squadraPokemon.length < 6 ?\n            <Aggiungi nomi={nomiPok} aggiungi={aggiungiPokemon} />\n            : squadraPokemon.length < 6 ? <div>Loading</div> : <div>La tua squadra e' piena</div>}\n        </div>\n      </div>\n\n      {\n        nomiPok && naturePok && items.length > 0 ?\n          <div className={style.boxPokemon}>\n            {\n              squadraPokemon.map((url, index) => (\n                <NuovoPokemon key={`NuovoPokemon:${index}`} indice={index} url={url} items={items} naturaList={naturePok} rimuovi={rimuoviPokemon} />\n              ))\n            }\n          </div> : null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"nuovopokemon_container__eQDG8\",\"pokemonContainer\":\"nuovopokemon_pokemonContainer__1CGVd\",\"img\":\"nuovopokemon_img__3EK0z\",\"buttonRimuovi\":\"nuovopokemon_buttonRimuovi__2tglf\",\"quattroItem\":\"nuovopokemon_quattroItem__1q72a\",\"loading\":\"nuovopokemon_loading__flKzz\",\"loadingBall\":\"nuovopokemon_loadingBall__3AtM-\"};"],"sourceRoot":""}